services:
  web-app:
    build:
      context: ./backend/autoCheck
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - backend/autoCheck/.env
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/api/media
    restart: always
    depends_on:
      - database
      - redis
      - beat

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  database:
    image: postgres:15-alpine
    restart: always
    env_file:
      - backend/autoCheck/.env
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  worker:
    build:
      context: ./backend/autoCheck
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./backend/autoCheck:/usr/src/app
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
      - DB_HOST=database
      - POSTGRES_DB=autocheckdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  beat:
    build:
      context: ./backend/autoCheck
    hostname: beat
    entrypoint: celery
    command: -A celery_app.app beat --loglevel=info
    volumes:
      - ./backend/autoCheck:/usr/src/app
    links:
      - redis
    depends_on:
      - redis
      - database


  react-app:
    image: docker-react-i
    build:
      context: ./client/
    volumes:
      - react_build:/react/build

  nginx:
    image: nginx:latest
    ports:
      - 80:8080
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/react
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/api/media
    depends_on:
      - web-app
      - react-app

volumes:
  react_build:
  postgres_data:
  static_volume:
  media_volume: